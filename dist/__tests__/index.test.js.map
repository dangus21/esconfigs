{"version":3,"sources":["../../src/__tests__/index.test.ts"],"sourcesContent":["import * as utils from \"../utils\";\nimport child_process from \"child_process\";\nimport fs from \"fs\";\n\njest.mock(\"prompts\");\n\njest.mock(\"fs\", () => ({\n\texistsSync: jest.fn(),\n\treaddirSync: jest.fn(),\n\treadFileSync: jest.fn(),\n\twriteFileSync: jest.fn()\n}));\n\njest.mock(\"child_process\", () => ({\n\tspawnSync: jest.fn().mockReturnValue({\n\t\tstatus: 0,\n\t\tstdout: Buffer.from(\"mock stdout\"),\n\t\tstderr: Buffer.from(\"\")\n\t})\n}));\n\njest.mock(\"process\", () => ({\n\tcwd: jest.fn(() => \"/mock/cwd\"),\n\tenv: {}\n}));\n\ndescribe(\"Config Generator Utils\", () => {\n\tdescribe(\"detectCurrentPackageManager\", () => {\n\t\tit(\"should detect pnpm\", () => {\n\t\t\t(fs.existsSync as jest.Mock).mockImplementation((file) =>\n\t\t\t\tfile.includes(\"pnpm-lock.yaml\")\n\t\t\t);\n\t\t\texpect(utils.detectCurrentPackageManager()).toBe(\"pnpm\");\n\t\t});\n\n\t\tit(\"should detect yarn\", () => {\n\t\t\t(fs.existsSync as jest.Mock).mockImplementation((file) =>\n\t\t\t\tfile.includes(\"yarn.lock\")\n\t\t\t);\n\t\t\texpect(utils.detectCurrentPackageManager()).toBe(\"yarn\");\n\t\t});\n\n\t\tit(\"should detect npm\", () => {\n\t\t\t(fs.existsSync as jest.Mock).mockImplementation((file) =>\n\t\t\t\tfile.includes(\"package-lock.json\")\n\t\t\t);\n\t\t\texpect(utils.detectCurrentPackageManager()).toBe(\"npm\");\n\t\t});\n\n\t\tit(\"should default to npm when no lock file is found\", () => {\n\t\t\t(fs.existsSync as jest.Mock).mockReturnValue(false);\n\t\t\texpect(utils.detectCurrentPackageManager()).toBe(\"npm\");\n\t\t});\n\t});\n\n\tdescribe(\"detectPackageManager\", () => {\n\t\tit(\"should return the specified package manager\", () => {\n\t\t\texpect(utils.detectPackageManager(\"yarn\")).toBe(\"yarn\");\n\t\t});\n\n\t\tit('should detect current package manager when \"current\" is specified', () => {\n\t\t\t(fs.existsSync as jest.Mock).mockImplementation((file) =>\n\t\t\t\tfile.includes(\"yarn.lock\")\n\t\t\t);\n\t\t\texpect(utils.detectPackageManager(\"current\")).toBe(\"yarn\");\n\t\t});\n\n\t\tit(\"should initialize npm if no package.json exists\", () => {\n\t\t\t(fs.existsSync as jest.Mock).mockReturnValue(false);\n\t\t\t(fs.readdirSync as jest.Mock).mockReturnValue([]);\n\t\t\tutils.detectPackageManager(\"npm\");\n\t\t\texpect(child_process.spawnSync).toHaveBeenCalledWith(\n\t\t\t\t\"npm\",\n\t\t\t\t[\"init\", \"-y\"],\n\t\t\t\texpect.any(Object)\n\t\t\t);\n\t\t});\n\n\t\tit(\"should initialize npm if no package.json exists\", () => {\n\t\t\t(fs.existsSync as jest.Mock).mockReturnValue(false);\n\t\t\t(fs.readdirSync as jest.Mock).mockReturnValue([]);\n\t\t\tutils.detectPackageManager(\"npm\");\n\t\t\texpect(child_process.spawnSync).toHaveBeenCalledWith(\n\t\t\t\t\"npm\",\n\t\t\t\t[\"init\", \"-y\"],\n\t\t\t\texpect.any(Object)\n\t\t\t);\n\t\t\t// The real 'npm init' is not executed, only our mock is called\n\t\t});\n\t});\n\n\tdescribe(\"buildPackageList\", () => {\n\t\tit(\"should build correct package list for ESLint and Prettier with NextJS and Tailwind\", () => {\n\t\t\tconst result = utils.buildPackageList(\n\t\t\t\t[\"eslint\", \"prettier\"],\n\t\t\t\ttrue,\n\t\t\t\ttrue\n\t\t\t);\n\t\t\texpect(result).toContain(\"prettier\");\n\t\t\texpect(result).toContain(\"prettier-plugin-tailwindcss\");\n\t\t\texpect(result).toContain(\"@next/eslint-plugin-next\");\n\t\t\texpect(result).toContain(\"eslint@8.57.1\");\n\t\t});\n\n\t\tit(\"should build correct package list for Biome without NextJS and Tailwind\", () => {\n\t\t\tconst result = utils.buildPackageList([\"biomejs\"], false, false);\n\t\t\texpect(result).toContain(\"@biomejs/biome@latest\");\n\t\t\texpect(result).not.toContain(\"prettier\");\n\t\t\texpect(result).not.toContain(\"@next/eslint-plugin-next\");\n\t\t});\n\t});\n\n\tdescribe(\"copyConfig\", () => {\n\t\tit(\"should write the correct ESLint config file\", () => {\n\t\t\tutils.copyConfig(\"eslint\");\n\t\t\texpect(fs.writeFileSync).toHaveBeenCalledWith(\n\t\t\t\texpect.stringContaining(\".eslintrc.js\"),\n\t\t\t\texpect.stringContaining(\"module.exports =\")\n\t\t\t);\n\t\t});\n\n\t\tit(\"should write the correct Prettier config file\", () => {\n\t\t\tutils.copyConfig(\"prettier\");\n\t\t\texpect(fs.writeFileSync).toHaveBeenCalledWith(\n\t\t\t\texpect.stringContaining(\".prettierrc\"),\n\t\t\t\texpect.stringContaining('\"singleQuote\": false')\n\t\t\t);\n\t\t});\n\n\t\tit(\"should write the correct Biome config file\", () => {\n\t\t\tutils.copyConfig(\"biomejs\");\n\t\t\texpect(fs.writeFileSync).toHaveBeenCalledWith(\n\t\t\t\texpect.stringContaining(\"biome.json\"),\n\t\t\t\texpect.stringContaining('\"$schema\":')\n\t\t\t);\n\t\t});\n\n\t\tit(\"should write the correct EditorConfig file\", () => {\n\t\t\tutils.copyConfig(\"editorConfig\");\n\t\t\texpect(fs.writeFileSync).toHaveBeenCalledWith(\n\t\t\t\texpect.stringContaining(\".editorConfig\"),\n\t\t\t\texpect.stringContaining(\"root = true\")\n\t\t\t);\n\t\t});\n\t});\n\n\tdescribe(\"detectReactInPackageJson\", () => {\n\t\tit(\"should return true when React is in dependencies\", () => {\n\t\t\t(fs.existsSync as jest.Mock).mockReturnValue(true);\n\t\t\t(fs.readFileSync as jest.Mock).mockReturnValue(\n\t\t\t\tJSON.stringify({\n\t\t\t\t\tdependencies: { react: \"^17.0.2\" }\n\t\t\t\t})\n\t\t\t);\n\t\t\texpect(utils.detectReactInPackageJson()).toBe(true);\n\t\t});\n\n\t\tit(\"should return true when React is in devDependencies\", () => {\n\t\t\t(fs.existsSync as jest.Mock).mockReturnValue(true);\n\t\t\t(fs.readFileSync as jest.Mock).mockReturnValue(\n\t\t\t\tJSON.stringify({\n\t\t\t\t\tdevDependencies: { \"react-dom\": \"^17.0.2\" }\n\t\t\t\t})\n\t\t\t);\n\t\t\texpect(utils.detectReactInPackageJson()).toBe(true);\n\t\t});\n\n\t\tit(\"should return false when React is not in package.json\", () => {\n\t\t\t(fs.existsSync as jest.Mock).mockReturnValue(true);\n\t\t\t(fs.readFileSync as jest.Mock).mockReturnValue(\n\t\t\t\tJSON.stringify({\n\t\t\t\t\tdependencies: { lodash: \"^4.17.21\" }\n\t\t\t\t})\n\t\t\t);\n\t\t\texpect(utils.detectReactInPackageJson()).toBe(false);\n\t\t});\n\n\t\tit(\"should return false when package.json does not exist\", () => {\n\t\t\t(fs.existsSync as jest.Mock).mockReturnValue(false);\n\t\t\texpect(utils.detectReactInPackageJson()).toBe(false);\n\t\t});\n\t});\n\n\tdescribe(\"installDeps\", () => {\n\t\tit(\"should call spawnSync with the correct package manager and arguments\", () => {\n\t\t\tutils.installDeps({\n\t\t\t\tconfig: [\"eslint\", \"prettier\"],\n\t\t\t\tmanager: \"npm\",\n\t\t\t\twithNextJS: true,\n\t\t\t\twithTailwind: true\n\t\t\t});\n\t\t\texpect(child_process.spawnSync).toHaveBeenCalledWith(\n\t\t\t\t\"npm\",\n\t\t\t\t[\"install\", expect.stringContaining(\"eslint@8.57.1\")],\n\t\t\t\texpect.any(Object)\n\t\t\t);\n\t\t});\n\n\t\tit('should use \"add\" for yarn', () => {\n\t\t\tutils.installDeps({\n\t\t\t\tconfig: [\"eslint\"],\n\t\t\t\tmanager: \"yarn\",\n\t\t\t\twithNextJS: false,\n\t\t\t\twithTailwind: false\n\t\t\t});\n\t\t\texpect(child_process.spawnSync).toHaveBeenCalledWith(\n\t\t\t\t\"yarn\",\n\t\t\t\t[\"add\", expect.stringContaining(\"eslint@8.57.1\")],\n\t\t\t\texpect.any(Object)\n\t\t\t);\n\t\t});\n\n\t\tit(\"should not actually run any commands\", () => {\n\t\t\tutils.installDeps({\n\t\t\t\tconfig: [\"eslint\"],\n\t\t\t\tmanager: \"npm\",\n\t\t\t\twithNextJS: false,\n\t\t\t\twithTailwind: false\n\t\t\t});\n\t\t\texpect(child_process.spawnSync).toHaveBeenCalled();\n\t\t\t// The real command is not executed, only our mock is called\n\t\t});\n\t});\n\n\tdescribe(\"No real operations\", () => {\n\t\tit(\"should not perform any real file system operations\", () => {\n\t\t\tutils.copyConfig(\"eslint\");\n\t\t\texpect(fs.writeFileSync).toHaveBeenCalled();\n\t\t\texpect(fs.writeFileSync).not.toBe(require(\"fs\").writeFileSync);\n\t\t});\n\n\t\tit(\"should not execute any real commands\", () => {\n\t\t\tutils.installDeps({\n\t\t\t\tconfig: [\"eslint\"],\n\t\t\t\tmanager: \"npm\",\n\t\t\t\twithNextJS: false,\n\t\t\t\twithTailwind: false\n\t\t\t});\n\t\t\texpect(child_process.spawnSync).toHaveBeenCalled();\n\t\t\texpect(child_process.spawnSync).not.toBe(\n\t\t\t\trequire(\"child_process\").spawnSync\n\t\t\t);\n\t\t});\n\n\t\tit(\"should use mocked process.cwd()\", () => {\n\t\t\texpect(process.cwd()).toBe(\"/mock/cwd\");\n\t\t});\n\t});\n});\n"],"mappings":"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","names":["child_process","fs","file","detectCurrentPackageManager","detectPackageManager","result","buildPackageList","copyConfig","detectReactInPackageJson","installDeps"]}