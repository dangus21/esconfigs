import{a,b as t,c as r,d as c}from"./chunk-QLHNYV6K.js";import{a as p}from"./chunk-GFPWC6II.js";import{existsSync as m,readFileSync as d,readdirSync as y,writeFileSync as h}from"node:fs";import{join as v,resolve as k}from"node:path";import l from"prompts";function w(){let e=v(process.cwd(),"package.json");if(!m(e))return console.log("package.json not found in the current directory."),!1;try{let n=JSON.parse(d(e,"utf-8")),i={...n.dependencies,...n.devDependencies};return"react"in i||"react-dom"in i}catch(n){return console.error("Error reading or parsing package.json:",n),!1}}var x=process.cwd(),o=y(x),C=w(),S=o.some(e=>e.startsWith("tsconfig.")),g=o.some(e=>e.startsWith("next.")),f=o.some(e=>e.startsWith("tailwind."));function s(e){return typeof e=="string"?e:JSON.stringify(e,null,2)}function j(e){if(e==="eslint")return S&&(t.extends.push("plugin:@typescript-eslint/recommended"),t.parser="@typescript-eslint/parser",t.plugins.push("@typescript-eslint"),t.rules["@typescript-eslint/no-unused-vars"]=[2,{ignoreRestSiblings:!0}],t.rules["@typescript-eslint/naming-convention"]=["warn",{selector:"interface",format:["PascalCase"],custom:{regex:"^I[A-Z]",match:!1}}],t.settings["import/resolver"]={typescript:{}}),C&&(t.extends.push("plugin:react/recommended","plugin:react-hooks/recommended"),t.rules["react-hooks/exhaustive-deps"]=2,t.rules["react/react-in-jsx-scope"]=0,t.settings.react={version:"detect"}),g&&t.extends.push("plugin:@next/next/recommended"),[".eslintrc.js",`module.exports = ${s(t)}`];if(e==="prettier")return f&&(r.plugins=["prettier-plugin-tailwindcss"]),[".prettierrc",s(r)];if(e==="biomejs")return["biome.json",s(a)];if(e==="editorConfig")return[".editorConfig",c]}function O(e){let[n,i]=j(e);h(k(process.cwd(),n),i)}(async()=>{let{configType:e}=await l({type:"multiselect",name:"configType",message:"What configs do you want to copy over?",choices:[{title:"ESlint",value:"eslint"},{title:"Prettier",value:"prettier"},{title:"Editor Config",value:"editorConfig"},{title:"BiomeJS",value:"biomejs"}]}),n;if(e){let{packageManager:i}=await l({name:"packageManager",message:"What package manager that you have do you prefer?",type:"select",choices:[{title:"Current",value:"current"},{title:"Npm",value:"npm"},{title:"Yarn",value:"yarn"},{title:"Pnpm",value:"pnpm"}],validate:u=>u?!0:"Select an option"});n=i}if(e&&n&&e.length>=0&&n){for(let i of e)O(i);p({manager:n,config:e,withNextJS:g,withTailwind:f})}})();
//# sourceMappingURL=index.js.map