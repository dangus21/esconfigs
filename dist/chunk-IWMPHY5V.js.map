{"version":3,"sources":["../src/const.ts","../src/utils.ts"],"sourcesContent":["import { detectReactInPackageJson } from \"./utils\";\nimport child_process from \"node:child_process\";\nimport fs from \"node:fs\";\n\nconst cwd = process.cwd();\nconst currDirFiles = fs.readdirSync(cwd);\nconst withReact = detectReactInPackageJson();\nconst withNextJS = currDirFiles.some((file) => file.startsWith(\"next.\"));\nconst withTS = currDirFiles.some(\n\t(file) => file.startsWith(\"tsconfig.\") || file.endsWith(\".ts\")\n);\nconst withTailwind = currDirFiles.some(\n\t(file) => file.startsWith(\"tailwind.\") || file.includes(\"tailwind\")\n);\n\nconst eslintDeps = [\n\t\"@typescript-eslint/eslint-plugin\",\n\t\"@typescript-eslint/parser\",\n\t\"eslint-import-resolver-typescript\",\n\t\"eslint-plugin-babel\",\n\t\"eslint-plugin-html\",\n\t\"eslint-plugin-import\",\n\t\"eslint-plugin-prettier\",\n\t\"eslint-plugin-react-hooks\",\n\t\"eslint-plugin-react\",\n\t\"eslint-plugin-sort-imports-es6-autofix\",\n\t\"eslint-plugin-unused-imports\",\n\t\"eslint-plugin-react-hooks\",\n\t\"eslint@8.57.1\"\n];\n\nconst spawnOptions = {\n\tcwd: cwd,\n\tstdio: \"inherit\",\n\tenv: process.env,\n\tshell: true,\n\tencoding: \"buffer\"\n} as child_process.SpawnSyncOptionsWithBufferEncoding;\n\nconst PACKAGES = {\n\tpnpm: \"pnpm-lock.yaml\",\n\tyarn: \"yarn.lock\",\n\tnpm: \"package-lock.json\"\n};\n\nexport {\n\tcurrDirFiles,\n\tcwd,\n\teslintDeps,\n\tPACKAGES,\n\tspawnOptions,\n\twithNextJS,\n\twithReact,\n\twithTailwind,\n\twithTS\n};\n","import * as configs from \"./configs\";\nimport {\n\tPACKAGES,\n\tcurrDirFiles,\n\tcwd,\n\tspawnOptions,\n\twithNextJS,\n\twithReact,\n\twithTS,\n\twithTailwind\n} from \"./const\";\nimport child_process from \"node:child_process\";\n\nimport { eslintDeps } from \"./const\";\nimport { existsSync, readFileSync } from \"fs\";\nimport { resolve } from \"node:path\";\nimport { writeFileSync } from \"node:fs\";\nimport type { ConfigOption, PackageManager } from \"./types\";\n\nfunction join(...paths: string[]): string {\n\treturn paths.join(\"/\").replace(/\\/+/g, \"/\");\n}\n\nfunction prettyObject(obj: Record<string, unknown> | string) {\n\tif (typeof obj === \"string\") return obj;\n\treturn JSON.stringify(obj, null, 2);\n}\n\nfunction buildDestinationFileAndFileName(\n\tconfigName: ConfigOption\n): [string, string] {\n\tif (configName === \"eslint\") {\n\t\tif (withTS) {\n\t\t\tconfigs.eslint.extends.push(\n\t\t\t\t\"plugin:@typescript-eslint/recommended\"\n\t\t\t);\n\t\t\tconfigs.eslint[\"parser\"] = \"@typescript-eslint/parser\";\n\t\t\tconfigs.eslint.plugins.push(\"@typescript-eslint\");\n\t\t\tconfigs.eslint.rules[\"@typescript-eslint/no-unused-vars\"] = [\n\t\t\t\t2,\n\t\t\t\t{ ignoreRestSiblings: true }\n\t\t\t];\n\t\t\tconfigs.eslint.rules[\"@typescript-eslint/naming-convention\"] = [\n\t\t\t\t\"warn\",\n\t\t\t\t{\n\t\t\t\t\tselector: \"interface\",\n\t\t\t\t\tformat: [\"PascalCase\"],\n\t\t\t\t\tcustom: {\n\t\t\t\t\t\tregex: \"^I[A-Z]\",\n\t\t\t\t\t\tmatch: false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t];\n\t\t\tconfigs.eslint.settings[\"import/resolver\"] = {\n\t\t\t\t// This loads <rootdir>/tsconfig.json to eslint\n\t\t\t\ttypescript: {}\n\t\t\t};\n\t\t}\n\t\tif (withReact) {\n\t\t\tconfigs.eslint.extends.push(\n\t\t\t\t\"plugin:react/recommended\",\n\t\t\t\t\"plugin:react-hooks/recommended\"\n\t\t\t);\n\t\t\tconfigs.eslint.rules[\"react-hooks/exhaustive-deps\"] = 2;\n\t\t\tconfigs.eslint.rules[\"react/react-in-jsx-scope\"] = 0;\n\t\t\tconfigs.eslint.settings[\"react\"] = { version: \"detect\" };\n\t\t}\n\t\tif (withNextJS) {\n\t\t\tconfigs.eslint.extends.push(\"plugin:@next/next/recommended\");\n\t\t}\n\t\treturn [\n\t\t\t\".eslintrc.js\",\n\t\t\t`module.exports = ${prettyObject(configs.eslint)}`\n\t\t];\n\t}\n\n\tif (configName === \"prettier\") {\n\t\tif (withTailwind) {\n\t\t\tconfigs.prettier[\"plugins\"] = [\"prettier-plugin-tailwindcss\"];\n\t\t}\n\t\treturn [\".prettierrc\", prettyObject(configs.prettier)];\n\t}\n\n\tif (configName === \"biomejs\") {\n\t\treturn [\"biome.json\", prettyObject(configs.biome)];\n\t}\n\n\tif (configName === \"editorConfig\") {\n\t\treturn [\".editorConfig\", configs.editorConfig];\n\t}\n}\n\nfunction detectCurrentPackageManager(): PackageManager {\n\tif (existsSync(join(cwd, PACKAGES.pnpm))) return \"pnpm\";\n\tif (existsSync(join(cwd, PACKAGES.yarn))) return \"yarn\";\n\tif (existsSync(join(cwd, PACKAGES.npm))) return \"npm\";\n\treturn \"npm\"; // Default to npm if no lock file is found\n}\n\nfunction detectPackageManager(manager: PackageManager): PackageManager {\n\tif (\n\t\tcurrDirFiles.length === 0 ||\n\t\t(currDirFiles.length > 0 && !currDirFiles.includes(\"package.json\"))\n\t) {\n\t\tchild_process.spawnSync(\"npm\", [\"init\", \"-y\"], spawnOptions);\n\t}\n\n\tif (manager === \"current\") {\n\t\treturn detectCurrentPackageManager();\n\t}\n\n\treturn manager;\n}\n\nfunction buildPackageList(\n\tconfig: ConfigOption[],\n\twithNextJS: boolean,\n\twithTailwind: boolean\n): string {\n\treturn String(\n\t\t[\n\t\t\t...(config.includes(\"prettier\")\n\t\t\t\t? withTailwind\n\t\t\t\t\t? [\"prettier\", \"prettier-plugin-tailwindcss\"]\n\t\t\t\t\t: [\"prettier\"]\n\t\t\t\t: []),\n\t\t\t...(withNextJS ? [...eslintDeps, \"@next/eslint-plugin-next\"] : []),\n\t\t\t...(config.includes(\"eslint\") ? eslintDeps : []),\n\t\t\t...(config.includes(\"biomejs\") ? [\"@biomejs/biome@latest\"] : [])\n\t\t].join(\" \")\n\t);\n}\n\nfunction installDeps({\n\tconfig,\n\tmanager,\n\twithNextJS = false,\n\twithTailwind = false\n}: {\n\tmanager: NonNullable<PackageManager>;\n\tconfig: ConfigOption[];\n\twithNextJS: boolean;\n\twithTailwind: boolean;\n}) {\n\tconst currDirPackageManager = detectPackageManager(manager);\n\tconst packages = buildPackageList(config, withNextJS, withTailwind);\n\n\tchild_process.spawnSync(\n\t\tcurrDirPackageManager,\n\t\t[currDirPackageManager === \"yarn\" ? \"add\" : \"install\", packages],\n\t\tspawnOptions\n\t);\n}\n\nexport function detectReactInPackageJson(): boolean {\n\tconst packageJsonPath = join(process.cwd(), \"package.json\");\n\n\tif (!existsSync(packageJsonPath)) {\n\t\tconsole.log(\"package.json not found in the current directory.\");\n\t\treturn false;\n\t}\n\n\ttry {\n\t\tconst packageData = JSON.parse(readFileSync(packageJsonPath, \"utf-8\"));\n\t\tconst dependencies = {\n\t\t\t...packageData.dependencies,\n\t\t\t...packageData.devDependencies\n\t\t};\n\n\t\treturn \"react\" in dependencies || \"react-dom\" in dependencies;\n\t} catch (error) {\n\t\tconsole.error(\"Error reading or parsing package.json:\", error);\n\t\treturn false;\n\t}\n}\n\nfunction copyConfig(configName: ConfigOption) {\n\ttry {\n\t\tconst [fileName, ogFile] = buildDestinationFileAndFileName(configName);\n\t\twriteFileSync(resolve(process.cwd(), fileName), ogFile);\n\t\tconsole.log(`Successfully created ${fileName}`);\n\t} catch (error) {\n\t\tconsole.error(`Error creating ${configName} config:`, error);\n\t}\n}\n\nexport {\n\tbuildDestinationFileAndFileName as buildDestinationFileName,\n\tinstallDeps,\n\tcopyConfig\n};\n"],"mappings":"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","names":["fs","cwd","currDirFiles","withReact","detectReactInPackageJson","withNextJS","file","withTS","withTailwind","eslintDeps","spawnOptions","PACKAGES","child_process","existsSync","readFileSync","resolve","writeFileSync","join","paths","prettyObject","obj","buildDestinationFileAndFileName","configName","withTS","eslint","withReact","withNextJS","withTailwind","prettier","biome","editorConfig","detectCurrentPackageManager","cwd","PACKAGES","detectPackageManager","manager","currDirFiles","child_process","spawnOptions","buildPackageList","config","eslintDeps","installDeps","currDirPackageManager","packages","detectReactInPackageJson","packageJsonPath","packageData","dependencies","error","copyConfig","fileName","ogFile"]}